openapi: 3.0.3
info:
  title: Product And Location - OpenAPI 3.0
  description: |-
    정책 : 
    
         1) 창고는 하나로 설정 
         2) 한가지 상품이라도 여러 랙에 지정 가능, 같은 상품 여러 위치에 배치 가능.
         3) 배포 우선으로 진행, 세부적인 부분들은 차후에 추가하여 진행하도록 하고,
            고객(또는 실무자)들이 바로 사용할 수 있는 단계까지 세팅 진행.
    
         4번은 보류 -> 랙을 User가 원하는 대로 정할 수 있게 설정 필요.     
         4) 랙의 수량은 필요할 때, “4.위치 관리" 페이지에서 추가하여 진행하고,
            “2.2 상품 관리 - 상품 조회/수정”에서 상품 등록 시, 옵션에서 선택하여 위치 지정.
            (사용자가 위치를 수기로 작성하는 일은 없도록 설정)
         # 프로젝트 마감 기간 : 4/20일(토요일)까지 배포까지 완료하기.
  termsOfService: http://swagger.io/terms/
  contact:
    email: santinomin0381@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://localhost:8080
tags:
  - name: product
    description: Product management
    externalDocs:
      description: Find out more about our api (visit Tistory)
      url: https://santino.tistory.com/

  - name: location
    description: Location management
    externalDocs:
      description: Find out more about our api (visit Tistory)
      url: https://santino.tistory.com/

  # 2.1(Get) /product/manage/search : 상품 검색
paths:
  /product/manage/search:
    get:
      tags:
        - product
      summary: 상품 검색
      description: 상품 검색 시, 상품 리스트를 보여줍니다.
      parameters:
        - name: productName
          in: query
          description: 상품명
          required: true
          explode: true
          schema:
            type: string

      responses:
        '200':
          description: 정상적인 접근입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchProduct'
            application/xml:
              schema:
                $ref: '#/components/schemas/searchProduct'
        '400':
          description: Invalid input
        '404':
          description: Product not found
        '422':
          description: Validation exception

  #  2.2 (GET) product/manage/search/{productId} 상품 정보 보여주기
  /product/manage/search/{productId}:
    get:
      tags:
        - product
      summary: 상품 정보
      description: 상품의 정보를 보여줍니다.(이미지,상품명,위치)
      parameters:
        - name: productId
          in: path
          description: 상품id
          required: true
          explode: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 성공적인 접근입니다.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/productId'
                  - type: object
                    properties:
                      additionalProperty:
                        type: string
            application/xml:
              schema:
                allOf:
                  - $ref: '#/components/schemas/productId'
                  - type: object
                    properties:
                      additionalProperty:
                        type: string
        '400':
          description: Invalid status value
        '404':
          description: Product not found
        '422':
          description: Validation exception

    put:
      tags:
        - product
      summary: 상품 정보 변경
      description: 해당 상품의 정보를 변경 합니다.
      requestBody:
        description: 세부 내용을 변경합니다.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/productInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/productInfo'
        required: true
      operationId: edit

      parameters:
        - name: productId
          in: path
          description: productId (path에서 가져온 값)
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: 수정 완료 되었습니다.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/edited'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/edited'
        '400':
          description: Invalid tag value
        '404':
          description: Product not found
        '422':
          description: Validation exception

    delete:
      tags:
        - product
      summary: 해당 상품 삭제
      description: 해당 상품 삭제 -> 완전 삭제 보다는, update로 진행해서 is_valid=false로 설정.
      operationId: delete
      parameters:
        - name: productId
          in: path
          description: 해당 상품을 삭제합니다.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 삭제 완료 되었습니다.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/delete'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/delete'
        '400':
          description: Invalid tag value
        '404':
          description: Product not found
        '422':
          description: Validation exception


  /product/location/areaList:
    get:
      tags:
        - location
      summary: 구역 리스트
      description: 사용 가능한 구역을 보여줍니다.
      parameters:
        - name: areaList
          in: query
          description: 사용 가능 구역
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 정상적인 접근입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/areaList'
            application/xml:
              schema:
                $ref: '#/components/schemas/areaList'
        '400':
          description: Invalid ID supplied
        '404':
          description: Location not found

  /product/location/rackList:
    get:
      tags:
        - location
      summary: 랙 리스트
      description: 사용 가능한 랙 위치를 보여줍니다.
      parameters:
        - name: rackList
          in: query
          description: 사용 가능 랙
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 정상적인 접근입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rackList'
            application/xml:
              schema:
                $ref: '#/components/schemas/rackList'
        '400':
          description: Invalid ID supplied
        '404':
          description: Location not found

  /product/location/floorList:
    get:
      tags:
        - location
      summary: 층 리스트
      description: 사용 가능한 층을 보여줍니다.
      parameters:
        - name: floorList
          in: query
          description: 사용 가능 층
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 정상적인 접근입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/floorList'
            application/xml:
              schema:
                $ref: '#/components/schemas/floorList'
        '400':
          description: Invalid ID supplied
        '404':
          description: Location not found


  /product/manage/register:
    post:
      tags:
        - product
      summary: 상품 등록
      description: 상품을 등록합니다. 기입 사항을 확인 해주세요.
      requestBody:
        description: 해당 상품을 등록합니다.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register'
          application/xml:
            schema:
              $ref: '#/components/schemas/register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/register'
        required: true
      #      parameters:
      #        - name: productName
      #          in: query
      #          description: 등록하실 상품명을 입력 해주세요.
      #          #          example: 예시) 오이 비누
      #          required: true
      #          schema:
      #            type: string

      responses:
        '200':
          description: 등록 완료 되었습니다.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/register'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/register'
        '400':
          description: Invalid tag value
        '404':
          description: Product not found
        '422':
          description: Validation exception

  /product/manage/categoryList:
    get:
      tags:
        - product
      summary: 카테고리 리스트
      description: 등록된 모든 카테고리를 보여줍니다.
      parameters:
        - name: categoryList
          in: query
          description: 모든 카테고리
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 정상적인 접근입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categoryList'
            application/xml:
              schema:
                $ref: '#/components/schemas/categoryList'
        '400':
          description: Invalid ID supplied
        '404':
          description: Location not found

  /product/location/addArea:
    post:
      tags:
        - location
      summary: 구역 등록
      description: 구역을 등록합니다.
      requestBody:
        description: 해당 상품을 등록합니다.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setArea'
          application/xml:
            schema:
              $ref: '#/components/schemas/setArea'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/setArea'
        required: true

      responses:
        '200':
          description: 정상적인 접근입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setAreaResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/setAreaResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: location not found

  /product/location/addRack:
    post:
      tags:
        - location
      summary: 랙 등록
      description: 구역을 등록합니다.
      requestBody:
        description: 해당 상품을 등록합니다.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setRack'
          application/xml:
            schema:
              $ref: '#/components/schemas/setRack'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/setRack'
        required: true

      responses:
        '200':
          description: 정상적인 접근입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setRackResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/setRackResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: location not found

  /product/location/addFloor:
    post:
      tags:
        - location
      summary: 층 등록
      description: 구역을 등록합니다.
      requestBody:
        description: 해당 상품을 등록합니다.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setFloor'
          application/xml:
            schema:
              $ref: '#/components/schemas/setFloor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/setFloor'
        required: true

      responses:
        '200':
          description: 정상적인 접근입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setFloorResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/setFloorResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: location not found

components:
  schemas:
    edited:
      type: object
      properties:
        productId:
          type: integer
          example: 6
        productName:
          type: string
          example: 압타밀
        category:
          type: object
          example:
            category_id: 9
            category_name: 유아 식품
        expiredDate:
          type: string
          format: date-time
          example: 2024-04-02
        imageUrl:
          type: array
          items:
            type: string
          example:
            - "https://www.google.com/babyProducts/image3.jpg"
        price:
          type: string
          example: 18,000원
          xml:
            name: imageUrl
        #        created_at:
        #          type: string
        #          format: date-time
        #          example: "2024-04-31T00:00:00Z"
        #        updated_at:
        #          type: string
        #          format: date-time
        #          example: "2024-04-31T00:00:00Z"
        #        deleted_at:
        #          type: string
        #          format: date-time
        #          example: "2024-04-31T00:00:00Z"

        status:
          type: string
          description: 주문 상황
          example: out of stock
        location:
          type: object
          example:
            Area: A12
            Rack: R3
            Floor: F1

    delete:
      type: object
      properties:
        productId:
          type: integer
          example: 6
        productName:
          type: string
          example: 압타밀
        category:
          type: object
          example:
            category_id: 9
            category_name: 유아 식품
        expiredDate:
          type: string
          example: 2025-12-01
        imageUrl:
          type: array
          items:
            type: string
          example:
            - "https://www.google.com/babyProducts/image3.jpg"
        price:
          type: string
          example: 18,000원
        status:
          type: string
          example: out of stock
        location:
          type: object
          example:
            Area: A3
            Rack: R5
            Floor: F1

    #//areaList schema
    areaList:
      # items:
      type: object
      items:
        type: array
      properties:
        area:
          type: string
          # items:
          #   type: string
          # example: C
        status:
          type: string
          description: 주문 상황
          example: 등록 가능
          enum:
            - 등록 가능
            - 해당 위치에 등록이 불가합니다.

      example:
        area:
          - id: 1
            name: A 구역
            status: in use(사용 중)
          - id: 2
            name: B 구역
            status: available(사용 가능)
          - id: 3
            name: C 구역
            status: available(사용 가능)
          - id: 4
            name: D 구역
            status: available(사용 가능)
          - id: 5
            name: E 구역
            status: available(사용 가능)
          - id: 6
            name: F 구역
            status: in use(사용 중)

    #//rackList schema
    rackList:
      # items:
      type: object
      items:
        type: array
      properties:
        rack:
          type: array
          items:
            type: integer
            # example: 4
        status:
          type: string
          description: 주문 상황
          example: 등록 가능
          enum:
            - 등록 가능
            - 해당 위치에 등록이 불가합니다.

      example:
        rack:
          - id: 1
            name: 1번 랙
            status: in use(사용 중)
          - id: 2
            name: 2번 랙
            status: available(사용 가능)
          - id: 3
            name: 3번 랙
            status: available(사용 가능)
          - id: 4
            name: 4번 랙
            status: available(사용 가능)
          - id: 5
            name: 5번 랙
            status: available(사용 가능)
          - id: 6
            name: 6번 랙
            status: in use(사용 중)

    #//floorList schema
    floorList:
      # items:
      type: object
      items:
        type: array
      properties:
        floor:
          type: array
          items:
            type: integer
            # example: 2
        status:
          type: string
          description: 주문 상황
          example: 등록 가능
          enum:
            - 등록 가능
            - 해당 위치에 등록이 불가합니다.

      example:
        floor:
          - id: 1
            name: 1층
            status: in use(사용 중)
          - id: 2
            name: 2층
            status: available(사용 가능)
          - id: 3
            name: 3층
            status: available(사용 가능)

    #//categoryList schema
    categoryList:
      type: object
      properties:
        category:
          type: array
          items:
            type: string
            example: 가구,가전 제품,건강 식품, 식품,유아 식품, 유아 용품,애견 용품, 주방 용품


    # addArea:
    #   type: object
    #   # items:
    #   # type: object
    #   properties:
    #     area:
    #       type: string
    #       # items:
    #       #   type: string

    #     status:
    #       type: string
    #       description: 구역 등록 상태
    #       example: 등록 가능
    #       enum:
    #         - 등록 가능
    #         - 해당 위치에 등록이 불가합니다.

    #   example:
    #     area: "E"
    #     status: 등록 완료


    # addRack:
    #   type: object
    #   # items:
    #   # type: object
    #   properties:
    #     rack:
    #       type: string
    #     status:
    #       type: string
    #       description: 주문 상황
    #       example: 등록 가능
    #       enum:
    #         - 등록 가능
    #         - 해당 위치에 등록이 불가합니다.
    #   example:
    #     rack: "6"
    #     status: 등록 완료

    # addFloor:
    #   type: string
    #   # items:
    #   # type: object
    #   properties:
    #     floor:
    #       type: integer
    #     status:
    #       type: string
    #       description: 주문 상황
    #       example: 등록 가능
    #       enum:
    #         - 등록 가능
    #         - 해당 위치에 등록이 불가합니다.
    #   example:
    #     floor: "2"
    #     status: 등록 완료

    searchProduct:
      type: array
      items:
        type: object
        properties:
          productName:
            type: string
          category:
            type: object
            items:
              type: string
          expiredDate:
            type: string
          imageUrl:
            type: array
            items:
              type: string
          price:
            type: string
          status:
            type: string
          location:
            type: string

      example:
        - productName: 하리보 캔디
          productId: 12
          category:
            category_id: 1
            category_name: 일반 식품
          expiredDate: 2025-03-25
          imageUrl:
            - "https://m.media-amazon.com/images/I/71EOeu0iuGL._AC_SX679_.jpg"
          price: 3,500원
          createdDate: 2023-12-24
          updatedDate: 2024-02-20
          status: on sale
          location:
            Area: A9
            Rack: R7
            Floor: F1

        - productName: 비타민 캔디
          productId: 13
          category:
            category_id: 6
            category_name: 건강 식품
          expiredDate: 2025-03-25
          imageUrl:
            - "https://m.media-amazon.com/images/I/71EOeu0iuGL._AC_SX679_.jpg"
          price: 40,000원
          createdDate: 2023-12-24
          updatedDate: 2024-02-20
          status: on sale
          location:
            Area: A3
            Rack: R9
            Floor: F2

        - productName: 유아 캔디
          productId: 14
          category:
            category_id: 9
            category_name: 유아 식품
          expiredDate: 2024-09-20
          imageUrl:
            - "https://m.media-amazon.com/images/I/71EOeu0iuGL._AC_SX679_.jpg"
          price: 2,000원
          createdDate: 2023-12-24
          updatedDate: 2024-02-20
          status: in sale
          location:
            Area: A3
            Rack: R2
            Floor: F3

    productInfo:
      type: object
      properties:
        productId:
          type: integer
          example: 6
        productName:
          type: string
          example: 힙 분유
        category:
          $ref: '#/components/schemas/CategoryKindermilch'
        expiredDate:
          type: string
          format: date-time
          example: 2024-05-02
        imageUrl:
          type: array
          items:
            type: string
          example:
            - "https://www.google.com/babyProducts/image1.jpg"
        price:
          type: string
          example: 15,000원
          xml:
            name: imageUrl
        status:
          type: string
          example: in sale
        location:
          type: object
          example:
            Area: A10
            Rack: R5
            Floor: F2
        updatedDate:
          type: string
          format: date-time
          example: 2024-06-25

    CategoryKindermilch:
      type: object
      properties:
        category_id:
          type: integer
          format: int64
          example: 9
        category_name:
          type: string
          example: 유아 식품
      xml:
        name: category

    CategoryList:
      type: object
      properties:
        categoryId:
          type: integer
          format: int64
        #          example: 35
        categoryName:
          type: string
        #          example: 출산/유아동
        sort:
          type: string
          #          example: 분유/어린이 식품
          example:
            - categoryId: 1,2,3,4,5,6
            - categoryName: 출산/유아동 용품, 주류, 의류, 일반 식품, 건강 식품
            - sort: 분유/어린이 용품, 와인, 보드카, 신발, 상의, 하의, 비타민


    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    #    Tag:
    #      type: object
    #      properties:
    #        id:
    #          type: integer
    #          format: int64
    #        name:
    #          type: string
    #      xml:
    #        name: tag

    productId:
      type: object
      items:
        type: array
        properties:
          productId:
            type: integer
            # format: int64
          productName:
            type: string
          category:
            type: object
            items:
              type: string
          imageUrl:
            type: string
            items:
              type: string
          price:
            type: string
          status:
            type: string
          location:
            type: string

      example:
        productId: 3
        productName: 압타밀 분유
        category:
          category_id: 9
          category_name: 유아 식품
        expiredDate: 2026-02-01
        imageUrl:
          - "https://m.media-amazon.com/images/I/71EOeu0iuGL._AC_SX679_.jpg"
        price: 40,000원
        createdDate: "2023-12-24"
        updatedDate: "2024-04-04"
        status: available
        location:
          Area: "A9"
          Rack: "R12"
          Floor: "F2"


    beforePost:
      type: object
      properties:
        productName:
          type: string
          example: 오이 비누
        expiredDate:
          type: string
          format: date-time
        imageUrl:
          type: string
          items:
            type: string
          example:
            - "https://www.google.com/babyProducts/image5.jpg"
        price:
          type: string
          example: 18,000원
          xml:
            name: imageUrl

    setArea:
      type: object
      properties:
        id:
          type: string
          example: 27
        name:
          type: string
          example: A16
        status:
          type: string
          example: available

    setAreaResponse:
      type: object
      properties:
        id:
          type: string
          example: 27
        area:
          type: string
          example: A16
        status:
          type: string
          example: registration successful

    setRack:
      type: object
      properties:
        id:
          type: string
          example: 8
        name:
          type: string
          example: R5
        status:
          type: string
          example: available

    setRackResponse:
      type: object
      properties:
        id:
          type: string
          example: 8
        area:
          type: string
          example: R5
        status:
          type: string
          example: registration successful

    setFloor:
      type: object
      properties:
        id:
          type: string
          example: 14
        name:
          type: string
          example: F2
        status:
          type: string
          example: available

    setFloorResponse:
      type: object
      properties:
        id:
          type: string
          example: 14
        area:
          type: string
          example: F2
        status:
          type: string
          example: registration successful

    register:
      type: object
      properties:
        productName:
          type: string
          example: 다이슨 청소기
        productId:
          type: string
          example: 23
        category:
          type: object
          example:
            category_id: 15
            category_name: 가전 제품
        expiredDate:
          type: string
          format: date-time
          example: "2028-03-03"
        imageUrl:
          type: string
          items:
            type: string
          example:
            - "https://www.google.com/babyProducts/image5.jpg"
            - "https://www.google.com/babyProducts/image18.jpg"
        price:
          type: string
          example: 180,000원
        status:
          type: string
          example: in sale
        location:
          type: object
          items:
            type: string
          example:
            Area: A19
            Rack: R8
            Floor: F1




